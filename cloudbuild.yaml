
steps:
  # install dependencies for frontend app
  - id: yarn-install
    name: node
    entrypoint: yarn
    args: ['install']
    dir: 'frontend'
    wait_for: ['-']

  # build frontend app with webpack
  - id: yarn-build
    name: node
    entrypoint: yarn
    dir: 'frontend'
    args: ['run', 'build'] 
    wait_for: ['yarn-install']

  - name: 'gcr.io/cloud-builders/gsutil'
    args: [ 'cp', 'frontend/*.html', 'gs://${_BUCKET_NAME}']
    wait_for: ['-']

  # Build the container image for api
  - id: docker-build
    name: 'gcr.io/cloud-builders/docker'
    dir: 'api'
    args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/cloudcatsapi', '.']
    wait_for: ['-']

  # Use the container image to run tests
  - id: run-tests # Added this line
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker run gcr.io/${_PROJECT_ID}/cloudcatsapi pytest -v']
    wait_for: ['docker-build'] # Added this line

  # Push the container image to Container Registry
  - id: gcr-push
    name: 'gcr.io/cloud-builders/docker'
    dir: 'api'
    args: ['push', 'gcr.io/${_PROJECT_ID}/cloudcatsapi']
    wait_for: ['run-test'] # Changed this line

  # Deploy container image to Cloud Run
  - id: cloud-run
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    dir: 'api'
    entrypoint: gcloud
    args: [
      'run',
      'deploy',
      'cloudcatsapi',
      '--image',
      'gcr.io/${_PROJECT_ID}/cloudcatsapi',
      '--region',
      'us-central1',
      '--platform',
      'managed',
      '--allow-unauthenticated'
    ]
    wait_for: ['gcr-push']

images:
- gcr.io/${_PROJECT_ID}/cloudcatsapi

artifacts:
  objects:
    location: "gs://${_BUCKET_NAME}/dist"
    paths: [
      'frontend/dist/*',
    ]
